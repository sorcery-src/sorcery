@use "../helpers" as *;

$-opts: (static, relative, absolute, fixed, sticky);

// prettier-ignore
@mixin position($variants...) {
	@include variants($variants...) using ($v) {
		@each $opt in $-opts {
			#{variant($opt, $v)} {
				position: $opt;
			}
		}
		@include generate-from-range((
			variant: $v,
			shorthand: inset,
			property: (top, right, bottom, left),
			range: (auto, 0),
			resolver: rem,
		));
		@include generate-from-range((
			variant: $v,
			shorthand: inset-x,
			property: (left, right),
			range: (auto, 0),
			resolver: rem,
		));
		@include generate-from-range((
			variant: $v,
			shorthand: inset-y,
			property: (top, bottom),
			range: (auto, 0),
			resolver: rem,
		));
		@include generate-from-range((
			variant: $v,
			shorthand: top,
			property: (top),
			range: (auto, 0),
			resolver: rem,
		));
		@include generate-from-range((
			variant: $v,
			shorthand: right,
			property: (right),
			range: (auto, 0),
			resolver: rem,
		));
		@include generate-from-range((
			variant: $v,
			shorthand: bottom,
			property: (bottom),
			range: (auto, 0),
			resolver: rem,
		));
		@include generate-from-range((
			variant: $v,
			shorthand: left,
			property: (left),
			range: (auto, 0),
			resolver: rem,
		));
		@include generate-from-range((
			variant: $v,
			shorthand: top-right,
			property: (top, right),
			range: (auto, 0),
			resolver: rem,
		));
		@include generate-from-range((
			variant: $v,
			shorthand: bottom-right,
			property: (bottom, right),
			range: (auto, 0),
			resolver: rem,
		));
		@include generate-from-range((
			variant: $v,
			shorthand: bottom-left,
			property: (bottom, left),
			range: (auto, 0),
			resolver: rem,
		));
		@include generate-from-range((
			variant: $v,
			shorthand: top-left,
			property: (top, left),
			range: (auto, 0),
			resolver: rem,
		));
	}
}
