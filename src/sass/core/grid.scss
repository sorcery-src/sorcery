@use "../configuration" as conf;
@use "../generators" as gen;
@use "../getters" as get;
@use "../utils";

@use "../mixins" as mx;

@mixin grid($variants...) {
	@each $variant in $variants {
		@if utils.matches($variant, core) {
			.grid {
				display: grid;
			}
		}

		@for $rv from 0 through 12 {
			.grid-cols-#{$rv} {
				@include mx.variants($variant) {
					grid-template-columns: repeat($rv, minmax(0, 1fr));
				}
			}
		}
		@for $rv from 0 through 12 {
			.grid-rows-#{$rv} {
				@include mx.variants($variant) {
					grid-template-rows: repeat($rv, minmax(0, 1fr));
				}
			}
		}

		// TODO: Can use `gen.generate-from-range` here.
		@each $rv in get.spaces() {
			.gap-#{$rv} {
				@include mx.variants($variant) {
					gap: gen.rem($rv);
				}
			}
		}
		// @each $rv in spaces() {
		// 	#{variant(gap-x-#{$rv}, $v)} {
		// 		column-gap: rem($rv);
		// 	}
		// }
		// @each $rv in spaces() {
		// 	#{variant(gap-y-#{$rv}, $v)} {
		// 		row-gap: rem($rv);
		// 	}
		// }
	}
}
