@use "sass:list";
@use "sass:map";

@use "getters" as *;
@use "headers" as *;

@use "core/background-color" as *;
@use "core/border-color" as *;
@use "core/border-radius" as *;
@use "core/border-width" as *;
@use "core/box-shadow" as *;
@use "core/color" as *;
@use "core/font-family" as *;
@use "core/font-size" as *;
@use "core/font-style" as *;
@use "core/font-weight" as *;
@use "core/grid" as *;
@use "core/height" as *;
@use "core/letter-spacing" as *;
@use "core/line-height" as *;
@use "core/margin" as *;
@use "core/max-width" as *;
@use "core/min-height" as *;
@use "core/min-width" as *;
@use "core/opacity" as *;
@use "core/overflow" as *;
@use "core/padding" as *;
@use "core/pointer-events" as *;
@use "core/position" as *;
@use "core/text-align" as *;
@use "core/text-decoration" as *;
@use "core/transform" as *;
@use "core/transition" as *;
@use "core/vertical-align" as *;
@use "core/white-space" as *;
@use "core/width" as *;
@use "core/z-index" as *;

@use "extensions/aspect-ratio" as *;
@use "extensions/container" as *;
@use "extensions/group" as *;
@use "extensions/hidden" as *;
@use "extensions/stacks" as *;

@use "configuration";
@use "utils";

// NOTE: Dart Sass does not support dynamic mixin invocations.
// Therefore mixins are conditionally, statically invoked.
//
// https://github.com/sass/sass/issues/626
//
// prettier-ignore
@mixin call-mixin($mixin, $variants...) {
	/* OK */ @if $mixin == "aspect-ratio"     { @include aspect-ratio($variants...); }
	/* OK */ @if $mixin == "background-color" { @include background-color($variants...); }
	/* OK */ @if $mixin == "border-color"     { @include border-color($variants...); }
	/* OK */ @if $mixin == "border-radius"    { @include border-radius($variants...); }
	/* OK */ @if $mixin == "border-width"     { @include border-width($variants...); }
	/* OK */ @if $mixin == "box-shadow"       { @include box-shadow($variants...); }
	/* OK */ @if $mixin == "color"            { @include color($variants...); }
	/* OK */ @if $mixin == "container"        { @include container($variants...); }
	/* OK */ @if $mixin == "font-family"      { @include font-family($variants...); }
	/* OK */ @if $mixin == "font-size"        { @include font-size($variants...); }
	/* OK */ @if $mixin == "font-style"       { @include font-style($variants...); }
	/* OK */ @if $mixin == "font-weight"      { @include font-weight($variants...); }
	/* OK */ @if $mixin == "grid"             { @include grid($variants...); }
	/* OK */ @if $mixin == "group"            { @include group($variants...); }
	/* OK */ @if $mixin == "height"           { @include height($variants...); }
	/* OK */ @if $mixin == "hidden"           { @include hidden($variants...); }
	/* OK */ @if $mixin == "letter-spacing"   { @include letter-spacing($variants...); }
	/* OK */ @if $mixin == "line-height"      { @include line-height($variants...); }
	/* OK */ @if $mixin == "margin"           { @include margin($variants...); }
	/* OK */ @if $mixin == "max-width"        { @include max-width($variants...); }
	/* OK */ @if $mixin == "min-height"       { @include min-height($variants...); }
	/* OK */ @if $mixin == "min-width"        { @include min-width($variants...); }
	/* OK */ @if $mixin == "opacity"          { @include opacity($variants...); }
	/* OK */ @if $mixin == "overflow"         { @include overflow($variants...); }
	/* OK */ @if $mixin == "padding"          { @include padding($variants...); }
	/* OK */ @if $mixin == "pointer-events"   { @include pointer-events($variants...); }
	/* OK */ @if $mixin == "position"         { @include position($variants...); }
	/* In progress */ @if $mixin == "stacks"           { @include stacks($variants...); }
	/* OK */ @if $mixin == "text-align"       { @include text-align($variants...); }
	/* OK */ @if $mixin == "text-decoration"  { @include text-decoration($variants...); }
	/* OK */ @if $mixin == "transform"        { @include transform($variants...); }
	/* OK */ @if $mixin == "transition"       { @include transition($variants...); }
	/* OK */ @if $mixin == "vertical-align"   { @include vertical-align($variants...); }
	/* OK */ @if $mixin == "white-space"      { @include white-space($variants...); }
	/* OK */ @if $mixin == "width"            { @include width($variants...); }
	/* OK */ @if $mixin == "z-index"          { @include z-index($variants...); }
}

@mixin duomo {
	$hidden: map.get(configuration.$variants, hidden);
	$non-hidden: utils.take(configuration.$variants, hidden);

	@each $mk, $mv in $non-hidden {
		@include call-mixin($mk, utils.take($mv, responsive)...);
	}
	@include call-mixin(hidden, utils.take($hidden, responsive)...);
	@each $key, $px in breakpoints() {
		@media (min-width: $px) {
			.#{delimit($key)} {
				@at-root {
					@each $property, $variants in $non-hidden {
						@if list.index($variants, responsive) {
							@include call-mixin($property, responsive);
						}
					}
					@if list.index($hidden, responsive) {
						@include call-mixin(hidden, responsive);
					}
				}
			}
		}
	}
}

@at-root {
	@if not configuration.$headless {
		// /*! Duomo CSS | MIT License | https://github.com/zaydek/duomo */
		// @include headers;
		// @include duomo;

		// @include aspect-ratio(core, hover, focus, group-focus);
		// @include background-color(core, hover, focus, group-focus);
		// @include border-color(core, hover, focus, group-focus);
		// @include border-radius(core, hover, focus, group-focus);
		// @include border-width(core, hover, focus, group-focus);
		// @include box-shadow(core, hover, focus, group-focus);
		// @include color(core, hover, focus, group-focus);
		// @include container(core, hover, focus, group-focus);
		// @include font-family(core, hover, focus, group-focus);
		// @include font-size(core, hover, focus, group-focus);
		// @include font-style(core, hover, focus, group-focus);
		// @include font-weight(core, hover, focus, group-focus);
		// @include grid(core, hover, focus, group-focus);
		// @include group(core, hover, focus, group-focus);
		// @include height(core, hover, focus, group-focus);
		// @include hidden(core, hover, focus, group-focus);
		// @include letter-spacing(core, hover, focus, group-focus);
		// @include line-height(core, hover, focus, group-focus);
		// @include margin(core, hover, focus, group-focus);
		// @include max-width(core, hover, focus, group-focus);
		// @include min-height(core, hover, focus, group-focus);
		// @include min-width(core, hover, focus, group-focus);
		// @include opacity(core, hover, focus, group-focus);
		// @include overflow(core, hover, focus, group-focus);
		// @include padding(core, hover, focus, group-focus);
		// @include pointer-events(core, hover, focus, group-focus);
		// @include position(core, hover, focus, group-focus);
		// @include text-align(core, hover, focus, group-focus);
		// @include text-decoration(core, hover, focus, group-focus);
		// @include transform(core, hover, focus, group-focus);
		// @include transition(core, hover, focus, group-focus);
		// @include vertical-align(core, hover, focus, group-focus);
		// @include white-space(core, hover, focus, group-focus);
		// @include width(core, hover, focus, group-focus);
		// @include z-index(core, hover, focus, group-focus);
		@include stacks(core, hover, focus, group-focus);
	}
}
