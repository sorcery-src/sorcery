@use "../configuration" as conf;
@use "../getters" as get;
@use "../mixins";
@use "../utils";

// prettier-ignore
$-range: (
	 0,
	 1,
	 2,
	 3,
	 4,
	 5,
	 6,
	 7,
	 8,
	 9,
	10,
	11,
	12,
	13,
	14,
	15,
	16,
);

// prettier-ignore
@mixin aspect-ratio($variants...) {
	@include mixins.compose($variants) using ($composed) {
		@if utils.matches($composed, core) {
			.aspect {
				// NOTE: `revert` does not work here because it will
				// be used as a numerical CSS variable.
				--dm-aspect-w: 1;

				// NOTE: `revert` does not work here because it will
				// be used as a numerical CSS variable.
				--dm-aspect-h: 1;

				// NOTE: `var(--dm-aspect-h)` takes precedence.
				position: relative;
				padding-bottom: calc(var(--dm-aspect-h) / var(--dm-aspect-w) * 100%);
			}
			.aspect > * {
				position: absolute;
				top: 0;
				right: 0;
				bottom: 0;
				left: 0;
				width: 100%;
				height: 100%;
			}

			.aspect-none {
				position: revert;
				padding-bottom: revert;
			}
			.aspect-none > * {
				position: revert;
				top: revert;
				right: revert;
				bottom: revert;
				left: revert;
				width: revert;
				height: revert;
			}
		}

		@each $rv in $-range {
			.aspect-w-#{$rv} {
				@include mixins.variants($composed...) {
					--dm-aspect-w: #{$rv};
				}
			}
		}
		@each $rv in $-range {
			.aspect-h-#{$rv} {
				@include mixins.variants($composed...) {
					--dm-aspect-h: #{$rv};
				}
			}
		}
	}
}
