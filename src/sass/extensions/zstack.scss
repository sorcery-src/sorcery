@use "../configuration" as conf;
@use "../getters" as get;
@use "../mixins";
@use "../utils";

// prettier-ignore
$-opts: (
	top: (top),
	right: (right),
	bottom: (bottom),
	left: (left),
	top-right: (top, right),
	bottom-right: (bottom, right),
	bottom-left: (bottom, left),
	top-left: (top, left),
);

// Inspired by @everdimension’s implementation: https://codepen.io/everdimension/pen/BaNpeWe.
//
// Based on https://codepen.io/zaydek/pen/VwKxrQR.
@mixin zstack($variants...) {
	@include mixins.compose($variants) using ($composed) {
		@if utils.matches($composed, core) {
			// prettier-ignore
			.zstack {
				--dm-display: grid;
				position: relative;       // Constrain children to the current bounding box
				display: grid;            // Use CSS Grid
				place-content: center;    // Center children along both axes (the parent element’s bounding box)
				place-items: center;      // Center children along both axes (the child element’s bounding box)
			}

			// prettier-ignore
			.zstack > * {
				grid-area: 1 / 1 / 1 / 1; // Self-center
				z-index: 10;              // Normalize appearance order for direct and indirect (e.g. `place-*`) children
			}
		}

		@each $mk, $mv in $-opts {
			.place-#{$mk} {
				@include mixins.variants($composed...) {
					position: absolute;
					@each $prop in $mv {
						#{$prop}: 0;
					}
				}
			}
		}
	}
}
