@use "core";
@use "extensions";

// NOTE: Dart Sass does not support dynamic mixin invocations.
// Therefore mixins are conditionally, statically invoked.
//
// https://github.com/sass/sass/issues/626
//
// prettier-ignore
@mixin call-mixin($mixin, $variants...) {
	@if $mixin == background-color { @include core.background-color($variants...); }
	@if $mixin == border-color { @include core.border-color($variants...); }
	@if $mixin == border-radius { @include core.border-radius($variants...); }
	@if $mixin == border-width { @include core.border-width($variants...); }
	@if $mixin == box-shadow { @include core.box-shadow($variants...); }
	@if $mixin == color { @include core.color($variants...); }
	@if $mixin == cursor { @include core.cursor($variants...); }
	@if $mixin == flex { @include extensions.flex($variants...); }
	@if $mixin == font-family { @include core.font-family($variants...); }
	@if $mixin == font-size { @include core.font-size($variants...); }
	@if $mixin == font-style { @include core.font-style($variants...); }
	@if $mixin == font-weight { @include core.font-weight($variants...); }
	@if $mixin == gap { @include core.gap($variants...); }
	@if $mixin == grid { @include core.grid($variants...); }
	@if $mixin == grid-template-columns { @include core.grid-template-columns($variants...); }
	@if $mixin == grid-template-rows { @include core.grid-template-rows($variants...); }
	@if $mixin == height { @include core.height($variants...); }
	@if $mixin == letter-spacing { @include core.letter-spacing($variants...); }
	@if $mixin == line-height { @include core.line-height($variants...); }
	@if $mixin == margin { @include core.margin($variants...); }
	@if $mixin == max-width { @include core.max-width($variants...); }
	@if $mixin == min-height { @include core.min-height($variants...); }
	@if $mixin == min-width { @include core.min-width($variants...); }
	@if $mixin == opacity { @include core.opacity($variants...); }
	@if $mixin == overflow { @include core.overflow($variants...); }
	@if $mixin == padding { @include core.padding($variants...); }
	@if $mixin == pointer-events { @include core.pointer-events($variants...); }
	@if $mixin == position { @include core.position($variants...); }
	@if $mixin == text-align { @include core.text-align($variants...); }
	@if $mixin == text-decoration { @include core.text-decoration($variants...); }
	@if $mixin == transform { @include core.transform($variants...); }
	// FIXME: @if $mixin == transition { @include core.transition($variants...); }
	@if $mixin == vertical-align { @include core.vertical-align($variants...); }
	@if $mixin == white-space { @include core.white-space($variants...); }
	@if $mixin == width { @include core.width($variants...); }
	@if $mixin == z-index { @include core.z-index($variants...); }
	@if $mixin == aspect-ratio { @include extensions.aspect-ratio($variants...); }
	@if $mixin == container { @include extensions.container($variants...); }
	@if $mixin == group { @include extensions.group($variants...); }
	@if $mixin == hide { @include extensions.hide($variants...); }
}
