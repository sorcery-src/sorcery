@use "sass:list";
@use "sass:map";

@use "builder-call-mixin" as *;
@use "helpers" as *;
@use "preflight" as *;

@use "configuration";
@use "debug";
@use "introspection";

// NOTE: Must use `""`; `null` does not work as expected.
$-fonts: (
	sans: '""',
	serif: '""',
	mono: '""',
);

$-system-fonts: (
	sans: font(sans, $raw: true),
	serif: font(serif, $raw: true),
	mono: font(mono, $raw: true),
);

@at-root {
	@if not configuration.$headless {
		/*! duomo | MIT License | https://github.com/zaydek/duomo */

		// @include preflight;

		// 		// prettier-ignore
		// 		:root {
		// 			@include introspection.vars((shorthand: none, map: $-fonts));
		// 			@include introspection.vars((shorthand: system, map: $-system-fonts));
		// 			@include introspection.vars((shorthand: none, map: colors($raw: true)));
		// 			@include introspection.vars((shorthand: none, map: shadows($raw: true)));
		// 			@include introspection.vars((shorthand: none, map: timings($raw: true)));
		//
		// 			--placeholder-color-default: color(gray-400);
		// 			--border-color-default: color(gray-200);
		// 			--transition-duration-default: 300ms;
		// 			--transition-timing-function-default: timing(ease-out);
		// 		}

		@each $module, $variants in configuration.$variants {
			@include call-mixin($module, $variants...);
		}

		// @each $mk, $mv in configuration.$variants {
		// 	@if $mk != hidden {
		// 		@include call-mixin($mk, var-join(core, take($mv, responsive))...);
		// 	}
		// }
		// @each $mk, $mv in configuration.$variants {
		// 	@if $mk != hidden {
		// 		@if list.index($mv, responsive) {
		// 			@include call-mixin($mk, responsive);
		// 		}
		// 	}
		// }
		// // NOTE: `hidden` must be last.
		// @if map.get(configuration.$variants, hidden) {
		// 	@include call-mixin(hidden, var-join(core, map.get(configuration.$variants, hidden))...);
		// }
	}
}
