@use "../../../helpers" as *;

$-opts: (
	tl: (
		top: 0,
		right: null,
		bottom: null,
		left: 0,
	),
	t: (
		top: 0,
		right: null,
		bottom: null,
		left: null,
	),
	tr: (
		top: 0,
		right: 0,
		bottom: null,
		left: null,
	),
	l: (
		top: null,
		right: null,
		bottom: null,
		left: 0,
	),
	r: (
		top: null,
		right: 0,
		bottom: null,
		left: null,
	),
	bl: (
		top: null,
		right: null,
		bottom: 0,
		left: 0,
	),
	b: (
		top: null,
		right: null,
		bottom: 0,
		left: null,
	),
	br: (
		top: null,
		right: 0,
		bottom: 0,
		left: null,
	),
);

@mixin zstack($variants...) {
	.zstack {
		--unhidden: grid;
		> * {
			--unhidden: initial;
		}
	}

	// 1. Uses CSS Grid to center children.
	// 2. Uses `place-items` as a shorthand for centering children.
	// 3. Uses `relative` to constrain `absolute` children.
	.zstack {
		display: grid;
		place-items: center;
		position: relative;
		> * {
			grid-area: 1 / 1 / 1 / 1;
		}
	}

	// Only the placement API implements variants.
	@include variants($variants...) using ($v) {
		@each $mk, $mv in $-opts {
			#{variant(place-#{$mk}, $v)} {
				position: absolute;
				@each $mk, $mv in $mv {
					#{$mk}: $mv;
				}
				z-index: 10;
			}
		}
	}
}
